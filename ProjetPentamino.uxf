<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><element><id>UMLClass</id><coordinates><x>1270</x><y>0</y><w>250</w><h>320</h></coordinates><panel_attributes>Carre
--
- int x;
- int y;
--
+ Carre(int x, int y)
+ Carre( Carre car)
+ equals(Carre c) : boolean
+ setX(int x)
+ setY(int y)
+ setXY(int x, int y)
+ getX() : int
+ getY() : int
+ toString() : String</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1230</x><y>390</y><w>320</w><h>440</h></coordinates><panel_attributes>(abstract) Piece
--
- int x;
- int y;
- char id;
- String nomFichier;
- int hauteur;
- int largeur;
--
+ Piece(int x, int y)
+ lireFichier() 
+ superpose(Piece p, int x, int y) : boolean
+ afficherPiece()
+ CarresPlacable(int x, int y) : ArrayList&lt;Carre&gt;
+ CarresNonSuperposes(int x, int y) : ArrayList&lt;Carre&gt;
+ setX(int nx)
+ setY(int ny)
+ setXY(int nx, int ny)
+ setId(char nid)
+ setListe(ArrayList&lt;Carre&gt; ar)
+ setNomFichier(String nnom)
+ getX() : int
+ getY() : int
+ getId() : char
+ getListe() : ArrayList&lt;Carre&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>80</y><w>220</w><h>290</h></coordinates><panel_attributes>Jeu
--

--
+ static nextInt() : int
+ static chargerListeJoueur()
+ static sauvegarder()
+ static afficherListeAlpha()
+ static afficherListeScore()
+ static affichageMenu() : int
+ static choisirJoueur() : Joueur
+ static creerJoueur()
+ static choisirPartie()
+ static creerPartie()
+ static startGame()
+ static menuParties() : int
+ static main(String[] args)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>860</x><y>70</y><w>320</w><h>440</h></coordinates><panel_attributes>Partie
--
+ final static int hauteur;
+ final static int largeur;
- char grille[][];
- double score;
--
+ Partie()
+ remplirGrille()
+ addPieceAlea(int n)
+ listePieceAlea(int taille) : ArrayList&lt;Piece&gt;
+ debordeGrille(Piece p, int x, int y) : boolean
+ pieceSuperposee(Piece p, int x, int y) : boolean
+ ajouterPiece(Piece p, int x, int y)
+ forcerPlacementDebutant(Piece p, int x, int y)
+ forcerPlacementIntermediaire(Piece p, int x, int y)
+ retirerDernierePiece()
+ supprimerDernierePieceAPoser()
+ afficherListePiece()
+ afficherGrille()
+ afficherDetails()
+ nbPiPosees() : double
+ getPiaPosees() : ArrayList&lt;Piece&gt;
+ getScore() : double
+ setScore(double sc)
+ getGrille() : char [][]
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>460</x><y>130</y><w>240</w><h>280</h></coordinates><panel_attributes>(abstract) Joueur
--
- String nom;
- double scoreMoyen;
--
+ Joueur(String nom)
+ (abstract) poserPiece(Piece p) : boolean
+ afficherParties()
+ (abstract) calculerScore() : double
+ calculerScoreMoyen()
+ ajouterPartie(Partie p)
+ setNom(String name)
+ getNom() : String
+ setScore(double sc)
+ getScore() : double
+ getListe() : ArrayList&lt;Partie&gt;
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>190</x><y>400</y><w>180</w><h>120</h></coordinates><panel_attributes>Debutant
--

--
+ Debutant(String nom)
+ poserPiece(Piece p) : boolean
+ calculerScore() : double
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>390</x><y>480</y><w>180</w><h>120</h></coordinates><panel_attributes>Intermediaire
--

--
+ Intermediaire(String nom)
+ poserPiece(Piece p) : boolean
+ calculerScore() : double</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>600</x><y>480</y><w>190</w><h>120</h></coordinates><panel_attributes>Avance
--

--
+ Avance(String nom)
+ poserPiece(Piece p) : boolean
+ calculerScore() : double</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>720</x><y>650</y><w>200</w><h>80</h></coordinates><panel_attributes>CaseDejaRemplie
--

--
+ CaseDejaRemplie(String s)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>480</x><y>650</y><w>190</w><h>80</h></coordinates><panel_attributes>PieceDebordeException
--

--
+ PieceDebordeException(String s)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1090</x><y>770</y><w>90</w><h>70</h></coordinates><panel_attributes>C
--

--
+ C(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1120</x><y>890</y><w>90</w><h>70</h></coordinates><panel_attributes>I
--

--
+ I(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1260</x><y>940</y><w>90</w><h>70</h></coordinates><panel_attributes>L
--

--
+ L(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1360</x><y>940</y><w>90</w><h>70</h></coordinates><panel_attributes>P
--

--
+ P(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1460</x><y>940</y><w>90</w><h>70</h></coordinates><panel_attributes>Q
--

--
+ Q(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1560</x><y>940</y><w>90</w><h>70</h></coordinates><panel_attributes>S
--

--
+ S(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1660</x><y>940</y><w>90</w><h>70</h></coordinates><panel_attributes>T
--

--
+ T(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1660</x><y>850</y><w>90</w><h>70</h></coordinates><panel_attributes>U
--

--
+ U(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1660</x><y>760</y><w>90</w><h>70</h></coordinates><panel_attributes>X
--

--
+ X(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1660</x><y>670</y><w>90</w><h>70</h></coordinates><panel_attributes>Z
--

--
+ Z(int x, int y)</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>654</x><y>402</y><w>40</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;20;80</additional_attributes></element><element><id>Relation</id><coordinates><x>473</x><y>401</y><w>80</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>60;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>363</x><y>401</y><w>120</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>100;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1171</x><y>786</y><w>80</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>60;10;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1201</x><y>820</y><w>50</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>30;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>1281</x><y>820</y><w>50</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;30;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1361</x><y>820</y><w>60</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1461</x><y>820</y><w>60</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;120</additional_attributes></element><element><id>Relation</id><coordinates><x>1515</x><y>824</y><w>110</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;90;110</additional_attributes></element><element><id>Relation</id><coordinates><x>1535</x><y>814</y><w>150</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;130;130</additional_attributes></element><element><id>Relation</id><coordinates><x>1543</x><y>752</y><w>140</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;120;100</additional_attributes></element><element><id>Relation</id><coordinates><x>1541</x><y>690</y><w>140</w><h>100</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;120;80</additional_attributes></element><element><id>Relation</id><coordinates><x>1539</x><y>620</y><w>140</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;120;70</additional_attributes></element><element><id>Relation</id><coordinates><x>1369</x><y>310</y><w>150</w><h>100</h></coordinates><panel_attributes>lt=&lt;-
- ArrayList&lt;Carre&gt; liste
m1=*
m2=1</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>Relation</id><coordinates><x>693</x><y>285</y><w>190</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
- Arraylist&lt;Partie&gt; liste
m1=*
m2=1
</panel_attributes><additional_attributes>170;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>1070</x><y>500</y><w>180</w><h>110</h></coordinates><panel_attributes>lt=&lt;-
- Arraylist&lt;Pieces&gt; piPosees
m1=*
m2=*</panel_attributes><additional_attributes>160;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>909</x><y>506</y><w>340</w><h>210</h></coordinates><panel_attributes>lt=&lt;-
- Arraylist&lt;Pieces&gt; piaPosees
m1=*
m2=*</panel_attributes><additional_attributes>320;190;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>205</x><y>190</y><w>270</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
+ static Arraylist&lt;Joueur&gt; listeJoueur
m1=*
m2=1</panel_attributes><additional_attributes>250;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>213</x><y>310</y><w>270</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
+ static Joueur joueurCharge
m1=1
m2=1</panel_attributes><additional_attributes>250;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>215</x><y>70</y><w>660</w><h>50</h></coordinates><panel_attributes>lt=&lt;-
+ static Partie game
m1=1
m2=1</panel_attributes><additional_attributes>640;20;10;20</additional_attributes></element></diagram>